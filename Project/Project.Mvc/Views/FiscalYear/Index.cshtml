@using Project.Application.Interfaces.FiscalYear
@using Project.Domain.Common.Dto
@model ResultDto<Project.Application.Services.FiscalYear.Queries.GetAll.ResultGetAllFiscalYearDto>
@{
	int pageNumber = 1;
	int pageSize = 5;
	int totalPages = Model.Data.TotalPages;
	Ordering ordering = Ordering.MostRecent;

	int.TryParse(Context.Request.Query["Page"], out pageNumber);
	int.TryParse(Context.Request.Query["PageSize"], out pageSize);
	Ordering.TryParse(Context.Request.Query["ordering"], out ordering);

	int totalItems = Model.Data.TotalPages * pageSize;
}

<div class="container">

	<input type="hidden" id="Id"/>

	<div class="form-group col-4">
		<lable for="Name">نام دوره:</lable>
		<input id="Name" type="text" class="form-control" required/>
	</div>

	<br />

	<div class="form-group col-4">
		<lable for="StartDate">تاریخ شروع:</lable>
		<input id="StartDate" type="text" class="form-control" required/>
	</div>

	<br />

	<div class="form-group col-4">
		<lable for="EndDate">تاریخ پایان:</lable>
		<input id="EndDate" type="text" class="form-control" required />
	</div>

	<br/>

	<input id="SaveAddBtn" type="button" value="ذخیره" class="btn btn-success" onclick="Add()" />
	<input id="SaveEditBtn" type="hidden" value="ذخیره" class="btn btn-success" onclick="Edit()" />
	<input id="DeleteBtn" type="hidden" value="حذف" class="btn btn-danger" onclick="Delete()" />
	<br />
</div>

<div class="container" style="margin-top:5px; margin-bottom:5px;">
	<ul class="nav sort-tab-options" role="tablist">
	
		<li class="nav-item">فیلتر کردن بر اساس</li>
		<li class="nav-item"><a href="@Url.Action("Index", new{ Page = (pageNumber == 0 ? 1 : pageNumber), PageSize = (pageSize == 0 ? 5 : pageSize), ordering = Ordering.MostRecent})" class="nav-link active" aria-controls="MostRecent" aria-selected="true" role="tab" style="display:inline">جدید ترین</a></li>
		<li class="nav-item"><a href="@Url.Action("Index", new{ Page = (pageNumber == 0 ? 1 : pageNumber), PageSize = (pageSize == 0 ? 5 : pageSize), ordering = Ordering.Name})" class="nav-link" aria-controls="Name" aria-selected="false" role="tab" style="display:inline">نام</a></li>

	</ul>
</div>

<div class="container">

	<table class="table table-striped table-bordered table-secondary">
		<tr>
			<th></th>
			<th>نام دوره</th>
			<th>تاریخ شروع</th>
			<th>تاریخ پایان</th>
			<th></th>
		</tr>

		@if (Model.Data.Items != null)
		{
			@foreach (var item in Model.Data.Items)
			{
				<tr>
					<td><input class="btn btn-warning" type="submit" value="انتخاب ردیف" onclick="SelectRow('@item.Name', '@item.StartDate.ToString("yyyy/MM/dd")', '@item.EndDate.ToString("yyyy/MM/dd")', '@item.Id')" /></td>
					<td>@item.Name</td>
					<td>@item.StartDate.ToString("yyyy/MM/dd")</td>
					<td>@item.EndDate.ToString("yyyy/MM/dd")</td>
					<td>
						<button id="UpdateBtn" class="btn btn-primary" onclick="SelectEdit('@item.Name', '@item.StartDate.ToString("yyyy/MM/dd")', '@item.EndDate.ToString("yyyy/MM/dd")', '@item.Id')">ویرایش</button>
					</td>
			    </tr>
		    }
	    }
	    else
	    {
	  	    <tr>
				    
				  <td colspan="3" class="text-center">هیچ داده ای در دیتابیس وجود ندارد</td>
			
		    </tr>
	    }
    </table>

	<div>
	

		@if (pageNumber > 1)
		{
			<a href="@Url.Action("Index", new{ Page = (pageNumber == 0 ? 1 : pageNumber - 1), PageSize = (pageSize == 0 ? 5 : pageSize), ordering = ordering})" class="btn btn-primary">قبلی</a>
		}
		
		<span>صحفه @(pageNumber == 0 ? 1 : pageNumber) از @totalPages</span>

		@if (pageNumber < totalPages && totalPages != 1)
		{
			<a href="@Url.Action("Index", new{ Page = (pageNumber == 0 ? 2 : pageNumber + 1), PageSize =(pageSize == 0 ? 5 : pageSize),  ordering = ordering})" class="btn btn-primary">بعدی</a>
		}
	
	
	
	</div>
</div>


@section Scripts
{
	<link href="~/Sweetalert2/sweetalert2.min.css" rel="stylesheet" />
	<script src="~/Sweetalert2/sweetalert2.min.js"></script>

	<script>
		
		var ElementDeleteBtn = $("#DeleteBtn");
		var ElementSaveAddBtn = $("#SaveAddBtn");
		var ElementSaveEditBtn = $("#SaveEditBtn");
		var ElementIdName = $("#Name");
		var ElementIdStartDate = $("#StartDate");
		var ElementIdEndDate = $("#EndDate");
		var ElementIdId = $("#Id");

		function Add()
		{

			swal.fire
			({
			 title:'افزودن',
			 text : 'ایا از افزودن مطمـءن هستید؟',
			 icon: 'info',
			 showCancelButton: true,
			 cancelButtonColor: '#fc0000',
			 confirmButtonColor: '#039e00',
			 cancelButtonText:'خیر',
			 confirmButtonText:'بله، افزودن انجام شود'
			}).then((result) => {
				if (result.value)
				{
				    var data = new FormData();
				
					data.append('Name', ElementIdName.val());
					data.append('StartDate', ElementIdStartDate.val());
					data.append('EndDate', ElementIdEndDate.val());
				    
					$.ajax({
					type:'POST',
					url : '/fiscalyear/Add',
					contentType: false,
					processData: false,
					data:data,
					success: function(data)
					{
						if(data.isSuccess == true)
						{
							swal.fire
							(
								 'موفق',
								 data.message,
								 'success'
							).then(function(isConfirm)
							{
								window.location.replace("/fiscalyear");
							});
						}
						else
						{
							swal.fire
							(
								 'هشدار',
								 data.message,
								 'warning'
							);
						}
					},
					error: function(xhr, status, error)
					       {
							   
						   }
				});
				}
			});
		}

		function SelectRow(Name, StartDate, EndDate, Id)
		{
			
			ElementIdName.val(Name);
			ElementIdStartDate.val(StartDate);
			ElementIdEndDate.val(EndDate);
			ElementIdId.val(Id);

			ElementIdName.prop('readonly', true);
			ElementIdStartDate.prop('disabled', true);
			ElementIdEndDate.prop('disabled', true);
		}

		function SelectEdit(Name, StartDate, EndDate, Id)
		{
			
			ElementIdName.val(Name);
			ElementIdStartDate.val(StartDate);
			ElementIdEndDate.val(EndDate);
			ElementIdId.val(Id);

			ElementIdName.prop('readonly', false);
			ElementIdStartDate.prop('disabled', false);
			ElementIdEndDate.prop('disabled', false);
			ElementSaveAddBtn.prop('type', 'hidden');
			ElementDeleteBtn.prop('type', 'button');
			ElementSaveEditBtn.prop('type', 'button');

		}

		function Edit()
	    {
			
				swal.fire
				({
				 title:'ویرایش',
				 text : 'ایا از ویرایش مطمـءن هستید؟',
				 icon: 'info',
				 showCancelButton: true,
				 cancelButtonColor: '#fc0000',
				 confirmButtonColor: '#039e00',
				 cancelButtonText:'خیر',
				 confirmButtonText:'بله، ویرایش انجام شود'
				}).then((result) => {
					if (result.value)
					{
						var data = new FormData();

						data.append('Name', ElementIdName.val());
						data.append('StartDate', ElementIdStartDate.val());
						data.append('EndDate', ElementIdEndDate.val());
						data.append('Id', ElementIdId.val());

						$.ajax({
						type:'POST',
						url : '/fiscalyear/Update',
						contentType: false,
						processData: false,
						data:data,
						success: function(data)
						{
							if(data.isSuccess == true)
							{
								swal.fire
								(
									 'موفق',
									 data.message,
									 'success'
								).then(function(isConfirm)
								{
								   	window.location.replace("/fiscalyear");

					                
					                ElementSaveAddBtn.prop('type', 'button');
									ElementDeleteBtn.prop('type', 'hidden');
									ElementSaveEditBtn.prop('type', 'hidden');
								});
							}
							else
							{
								swal.fire
								(
									 'هشدار',
									 data.message,
									 'warning'
								);
							}
						},
						error: function(xhr, status, error)
							   {
		
							   }
					});
					}
					else
					{
					    window.location.replace("/fiscalyear");

					    ElementSaveAddBtn.prop('type', 'button');
					    ElementDeleteBtn.prop('type', 'hidden');
						ElementSaveEditBtn.prop('type', 'hidden');
					}
				});
	    }

		function Delete()
		{
				swal.fire
					({
					 title:'حذف',
						 text : 'ایا از حذف مطمـءن هستید؟',
					 icon: 'info',
					 showCancelButton: true,
					 cancelButtonColor: '#fc0000',
					 confirmButtonColor: '#039e00',
					 cancelButtonText:'خیر',
						 confirmButtonText:'بله، حذف انجام شود'
					}).then((result) => {
						if (result.value)
						{
								var data = {"Id":ElementIdId.val()};

							$.ajax({
							type:'POST',
							url : '/fiscalyear/Delete',
							data:data,
							success: function(data)
							{
								if(data.isSuccess == true)
								{
									swal.fire
									(
										 'موفق',
										 data.message,
										 'success'
									).then(function(isConfirm)
									{
										window.location.replace("/fiscalyear");
									});
								}
								else
								{
									swal.fire
									(
										 'هشدار',
										 data.message,
										 'warning'
									);
								}
							},
							error: function(xhr, status, error)
								   {

								   }
						});
						}
					});
		}



	kamaDatepicker('StartDate',
    {
		
	    placeholder:"برایه انتخاب تاریخ کلیک کنید",
		twodigit:false,
		markToday: true,
		markHolidays: true,
		highlightSelectedDay:true,

	});

	kamaDatepicker('EndDate',
	{

		placeholder:"برایه انتخاب تاریخ کلیک کنید",
		twodigit:false,
		markToday: true,
		markHolidays: true,
		highlightSelectedDay:true,

	});

	</script>


}